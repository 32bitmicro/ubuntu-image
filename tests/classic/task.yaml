summary: Build classic Ubuntu server image

environment:
    IMG_DEF_PATH/ubuntu-server-pc-amd64: /home/ubuntu-image/ubuntu-images/ubuntu-server-pc-amd64.yaml
    IMG_DEF_PATH/ubuntu-server-pc-arm64: /home/ubuntu-image/ubuntu-images/ubuntu-server-pc-arm64.yaml
    IMG_DEF_PATH/ubuntu-server-pi-arm64: /home/ubuntu-image/ubuntu-images/ubuntu-server-pi-arm64.yaml
    IMG_DEF_PATH/ubuntu-pi-arm64: /home/ubuntu-image/ubuntu-images/ubuntu-pi-arm64.yaml

execute: |
    ubuntu-image classic --debug --workdir /tmp/workdir $IMG_DEF_PATH

    IMG_NAME=$(cat $IMG_DEF_PATH | yq '.artifacts.img.[0].name')
    mkdir /tmp/loopback
    losetup --find --show --partscan /tmp/workdir/$IMG_NAME
    losetup -a | grep $IMG_NAME |cut -f1 -d: >> loop.txt
    LOOP="$(cat loop.txt)"

    for l in `ls -d "$LOOP"p*`
    do 
        p=${l#"$LOOP"}
        mkdir /tmp/$p
        mount $l /tmp/$p || true
    done

    ls /tmp/p3/

restore: |
    if [ -f loop.txt ]; then
        LOOP="$(cat loop.txt)"

        for l in `ls -d "$LOOP"p*`
        do 
            p=${l#"$LOOP"}
            mount --make-rprivate /tmp/$p || true
            umount --recursive /tmp/$p || true
        done

        losetup -d "$LOOP"
        sync
        losetup -l | NOMATCH "$LOOP"
        rm loop.txt
    fi

    rm -rf /tmp/workdir /tmp/loopback

debug: |
    df -h
    mount  -l
    if [ -f loop.txt ]; then
        cat loop.txt
    fi
    losetup -l